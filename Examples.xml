<?xml version="1.0" encoding="utf-8"?>
<Data>
  <Folders>
    <Folder>
      <Title>Programmers Guide</Title>
      <Description>Programmers Guide provides code samples about key programming concepts to build .NET and other applications that use Aspose.Slides.</Description>
      <FolderName>ProgrammersGuide</FolderName>
      <Order>1</Order>
      <Folders>
        <Folder>
          <Title>PowerPoint 2007 Format (PPTX)</Title>
          <Description>Examples for working with Microsift PowerPoint 2007 Documents.</Description>
          <FolderName>PowerPoint2007</FolderName>
          <Order>2</Order>
          <Folders>
            <Folder>
              <Title>Working with PresentationEx</Title>
              <Description>Examples related to opening, saving, managing properties, locking, printing of presentations (PPTX format) and convesion to different formats are included in this section.</Description>
              <FolderName>WorkingWithPresentationEx</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Converting PPTX to PDF</Title>
                  <Description>PDF documents are widely being used as a standard format of exchanging documents between organizations, government sectors and common users etc. So, it may also be required by the developers to convert their presentation files to PDF documents. Realizing this possible requirement, Aspose.Slides for .NET has added the built-in support of converting presentations to PDF documents without using any other component. In this example, this conversion process is explained in detail.</Description>
                  <FolderName>ConvertingPPTXtoPDF</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Converting PPTX to PDF</DisplayName>
                    <Url>Converting+PPTX+to+PDF</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo1.pdf</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo2.pdf</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Saving a PresentationEx</Title>
                  <Description>The PresentationEx class holds the contents of a presentation. Whether you are creating a presentation from scratch or modifying an existing one, you want to save your presentation when you're finished. With Aspose.Slides developers can either save presentation as a file or stream. Both of these approaches are discussed in detail in this example.

This example explains how to save a presentation in different ways:

- Save to file.
- Save to stream.
- Save with password protection.
- Saving a password protected presentation with read access to document properties.
- Save as read only.
- Remove write protection.</Description>
                  <FolderName>SavingAPresentationEx</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Saving a PresentationEx</DisplayName>
                    <Url>Saving+a+PresentationEx</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\toFile.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\toStream.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\passwordProtected.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\passwordProtectedReadOnlyProperties.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\readOnlyPresentation.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\writeProtectionRemoved.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Managing PresentationEx Properties</Title>
                  <Description>Microsoft PowerPoint 2007 provides a feature to add some properties to the presentation files. These document properties allow some useful information to be stored along with the documents (presentation files). There are two kinds of document properties as follows:

- System Defined (Built-in) Properties
- User Defined (Custom) Properties

Built-in properties contain general information about the document like document title, author's name, document statistics and so on. Custom properties are those ones, which are defined by the users as Name/Value pairs, where both name and value are defined by the user. Using Aspose.Slides, developers can access and modify the values of built-in properties as well as custom properties. Aspose.Slides provides a class DocumentPropertiesEx that represents the document properties associated with a PPTX presentation file through PresentationEx.DocumentProperties property.
Developers can use DocumentProperties property exposed by PresentationEx object to access the document properties of the PPTX presentation files as described in this example.</Description>
                  <FolderName>ManagePresentationExProperties</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Managing PresentationEx Properties</DisplayName>
                    <Url>Managing+PresentationEx+Properties</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\updatedProperties.pptx</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\updatedCustomProperties.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting PPTX with Notes to Tiff</Title>
                  <Description>TIFF is one of several widely used image formats that Aspose.Slides supports for converting a presentation with notes to images. You can also generate slide thumbnails in the Notes Slide view. This example shows how to generate TIFF images of a presentation in Notes Slide view.</Description>
                  <FolderName>ConvertPPTXWithNotesToTiff</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Converting PPTX with Notes to Tiff</DisplayName>
                    <Url>Converting+PPTX+with+Notes+to+Tiff</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\TestNotes.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\TestNotes.tiff</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting PPTX to TIFF</Title>
                  <Description>TIFF format is known by its flexibility to accommodate multipage images and data. Keeping in view the importance and popularity of TIFF format, Aspose.Slides provides the support for converting PPTX presentations into TIFF document.

This example explains how different tiff export options work:

- Converting PPTX Presentation to TIFF with default size.
- Converting PPTX Presentation to TIFF with custom size.</Description>
                  <FolderName>ConverPPTXToTIFF</FolderName>
                  <Order>5</Order>
                  <DocLink>
                    <DisplayName>Converting PPTX to TIFF</DisplayName>
                    <Url>Converting+PPTX+to+TIFF</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.tiff</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demoCustomSize.tiff</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting PPTX to XPS</Title>
                  <Description>XPS format is also widely used for exchange of data. Aspose.Slides takes care of its importance and provides the built-in support for converting a presentation into XPS document.

The Save method exposed by PresentationEx class can be used to convert the whole presentation into XPS document. Further, XpsOptions class exposes SaveMetafileAsPng property that can be set to true or false as per requirement. This example shows how to convert a PPTX presentation into XPS document with and without using options provided by XpsOptions class.</Description>
                  <FolderName>ConvertPPTXToXPS</FolderName>
                  <Order>6</Order>
                  <DocLink>
                    <DisplayName>Converting PPTX to XPS</DisplayName>
                    <Url>Converting+PPTX+to+XPS</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\output.xps</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\outputWithXPSOptions.xps</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting PPTX to HTML</Title>
                  <Description>HTML is one of several widely used format for exchanging data. Aspose.Slides provides support for converting a presentation to HTML. This examples shows you how to do this using Aspose.Slides.</Description>
                  <FolderName>ConvertPPTXToHTML</FolderName>
                  <Order>7</Order>
                  <DocLink>
                    <DisplayName>Converting PPTX to HTML</DisplayName>
                    <Url>Converting+PPTX+to+HTML</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo.html</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Working with Slides in PresentationEx</Title>
              <Description>This section contains examples for addition, accessing, removal, cloning and managing slides of a PresentationEx (PPTX) presentations.</Description>
              <FolderName>WorkingWithSlidesInPresentationEx</FolderName>
              <Order>2</Order>
              <Examples>
                <Example>
                  <Title>Creating Slides Thumbnail Image</Title>
                  <Description>Aspose.Slides for .NET is used to create presentation files containing slides. These slides can be viewed by opening presentation files using Microsoft PowerPoint. But sometimes, developers may need to view slides as images using their favorite image viewer. In such cases, Aspose.Slides for .NET help you generate thumbnail images of the slides. Using this feature is described in detail in this example.</Description>
                  <FolderName>CreateSlideThumbnail</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Creating Slides Thumbnail Image</DisplayName>
                    <Url>Creating+Slides+Thumbnail+Image</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.pptx</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\thumbnail.jpg</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Working with ShapesEx</Title>
              <Description>This section contains examples related to addition, formatting, rotating and accessing attributes of shapes in a presentationEx using Aspose.Slides.</Description>
              <FolderName>WorkingWithShapesEx</FolderName>
              <Order>3</Order>
              <Examples>
                <Example>
                  <Title>Adding Picture Frame to SlideEx</Title>
                  <Description>Picture frame is also one of the shapes offered by Aspose.Slides for .NET. Adding picture frame to a slide is bit trickier than simple shapes. A picture frame is like a picture in a frame. You can add any desired picture to your slide as a picture frame. In this example addition of picture frame to a slide is done.</Description>
                  <FolderName>AddPictureFrameToSlideEx</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Adding Picture Frame to SlideEx</DisplayName>
                    <Url>Adding+Picture+Frame+to+SlideEx</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\asp.jpg</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectPicFrame.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Filling ShapesEx with Picture</Title>
                  <Description>If a developer needs to fill a shape with an image of his own choice then Aspose.Slides gives full freedom to its users to fill a shape with any desired image. In this example, filling a shape with a picture is performed using Aspose.Slides in a very easy way.</Description>
                  <FolderName>FillShapeExWithPicture</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Filling ShapesEx with Picture</DisplayName>
                    <Url>Filling+ShapesEx+with+Picture</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\asp.jpg</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\RectShpPic.pptx</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
        <Folder>
          <Title>PowerPoint 97 - 2003 Format (PPT)</Title>
          <Description>Examples for working with Microsoft PowerPoint 97-2003 documents</Description>
          <FolderName>PowerPoint97_2003</FolderName>
          <Order>1</Order>
          <Folders>
            <Folder>
              <Title>Introduction</Title>
              <Description>Examples introducing the use of Aspose.Slides in your application.</Description>
              <FolderName>Introduction</FolderName>
              <Order>1</Order>
              <Examples>
                <Example>
                  <Title>Hello World Application</Title>
                  <Description>Example for creating a PowerPoint file having Hello World text at a specified position of the slide.</Description>
                  <FolderName>HelloWorldApplication</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Hello World Application using Aspose.Slides for .NET</DisplayName>
                    <Url>Hello+World+Application+using+Aspose.Slides+for+.NET</Url>
                  </DocLink>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\hello.ppt</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Working with Presentation</Title>
              <Description>Examples related to opening, saving, managing properties, locking, printing of presentations (PPT format) and convesion to different formats are included in this section.</Description>
              <FolderName>WorkingWithPresentation</FolderName>
              <Order>2</Order>
              <Examples>
                <Example>
                  <Title>Converting to PDF File</Title>
                  <Description>PDF documents are widely used as a standard format of exchanging documents between organizations, government sectors and common users etc. So, it may also be required by the developers to convert their presentation files to PDF documents. Realizing this possible requirement, Aspose.Slides for .NET has added the built-in support of converting presentations to PDF documents without using any other component. This example explains the conversion of presentation to PDF using default and custom PDF options.</Description>
                  <FolderName>ConvertingToPDFFile</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Converting to PDF File</DisplayName>
                    <Url>Converting+to+PDF+File</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo1.pdf</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo2.pdf</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Managing Presentation Properties</Title>
                  <Description>Microsoft PowerPoint provides the feature to add some properties to the presentation files. These document properties allow some useful information to be stored along with the documents (presentation files). There are two kinds of document properties as follows:

- System Defined (Built-in) Properties
- User Defined (Custom) Properties

Built-in properties contain general information about the document like document title, author's name etc . Custom properties are defined by the users as Name/Value pairs, where both name and value are defined by the user. Using Aspose.Slides, developers can access and modify the values of the built-in as well as custom properties. This example focuses on setting up the properties of a presentation using Aspose.Slides</Description>
                  <FolderName>ManagingPresentationProperties</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Managing Presentation Properties</DisplayName>
                    <Url>Managing+Presentation+Properties</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\modified.ppt</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\DemoProps.ppt</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Locking a Presentation</Title>
                  <Description>A presentation is composed of slides and each slide may have a number of elements. In general, every element of the slide is considered as a shape. Aspose.Slides provides a unique feature of locking the shape. In this way, whole presentation may be locked and hence can’t be edited unless it is unlocked through Aspose.Slides.

The Shape class exposes a Protection property that can be used to apply ten different types of locking mechanism as defined by ShapeProtection enumerator. The following sequence of steps is required to lock all the shapes in a presentation.

- Create an instance of Presentation class to load a presentation that is to be locked
- Loop through the presentation to access all the Slides in the presentation
- Loop through all the Shapes in each Slide
- Lock each Shape element using the Protection property exposed by Shape object
- Finally, write the PPT file using the Write method exposed by Presentation object</Description>
                  <FolderName>LockingAPresentation</FolderName>
                  <Order>5</Order>
                  <DocLink>
                    <DisplayName>Locking a Presentation</DisplayName>
                    <Url>Locking+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demoLock.ppt</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting to TIFF File</Title>
                  <Description>TIFF format is known by its flexibility to accommodate multipage images and data. Keeping in view the importance and popularity of TIFF format, Aspose.Slides provides the support for converting presentations into TIFF document.

The Save method exposed by Presentation class can be called by developers to convert the whole presentation into TIFF document. Further, Tiff Options class exposes ImageSize property enabling the developer to define the size of the image if required. This example shows how to convert a presentation into TIFF document with default options and with customized image size using TiffOptions class.</Description>
                  <FolderName>ConvertingToTIFFFile</FolderName>
                  <Order>6</Order>
                  <DocLink>
                    <DisplayName>Converting to TIFF File</DisplayName>
                    <Url>Converting+to+TIFF+File</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo1.tiff</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo2.tiff</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Converting to XPS File</Title>
                  <Description>XPS format is also widely used for exchange of data, therefore Aspose.Slides takes care of its importance and provides the built-in support for converting a presentation into XPS document.

The Save method exposed by Presentation class that can be used to convert the whole presentation into XPS document. Further, Xps Options class exposes SaveMetafileAsPng property that can be set to true or false as per requirement. This example shows how to convert a presentation into XPS document with and without using options provided by XpsOptions class.</Description>
                  <FolderName>ConvertingToXPSFile</FolderName>
                  <Order>7</Order>
                  <DocLink>
                    <DisplayName>Converting to XPS File</DisplayName>
                    <Url>Converting+to+XPS+File</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\demo1.xps</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo2.xps</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Printing a Presentation</Title>
                  <Description>Aspose.Slides provides four overloads methods for printing of the presentations. These methods are flexible enough to print the presentation to the default printer or to any of the available printer with customized settings. You only need to select the appropriate print method according to the requirement.

Printing of the presentation to the default printer is quite simple in Aspose.Slides. Perform the following steps in order to print the presentation to default printer:

- Create an instance of Presentation class to load a presentation that is to be printed
- Call the Print method with no parameters as exposed by the Presentation object</Description>
                  <FolderName>PrintingAPresentation</FolderName>
                  <Order>8</Order>
                  <DocLink>
                    <DisplayName>Printing a Presentation</DisplayName>
                    <Url>Printing+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
              <Folders>
                <Folder>
                  <Title>Opening a Presentation</Title>
                  <Description>Examples to explain opening of a presentation directly from your code using Aspose.Slides.</Description>
                  <FolderName>OpenPresentation</FolderName>
                  <Order>1</Order>
                  <Examples>
                    <Example>
                      <Title>Open Simple Presentation</Title>
                      <Description>Example for opening a simple presentation using Aspose.Slides</Description>
                      <FolderName>OpenSimple</FolderName>
                      <Order>1</Order>
                      <DocLink>
                        <DisplayName>Opening a Presentation</DisplayName>
                        <Url>Opening+a+Presentation</Url>
                      </DocLink>
                      <InputFiles>
                        <DataFile>
                          <Path>..\Data\simple.ppt</Path>
                        </DataFile>
                      </InputFiles>
                      <Type>Console</Type>
                    </Example>
                    <Example>
                      <Title>Open Password Protected Presentation</Title>
                      <Description>In this example, password protected presentation is accessed using LoadOptions class object to set the password and then the Presentation class to open the presentation.</Description>
                      <FolderName>OpenWithPassword</FolderName>
                      <Order>2</Order>
                      <DocLink>
                        <DisplayName>Opening a Presentation</DisplayName>
                        <Url>http://www.aspose.com/docs/display/slidesjava/Opening+a+Presentation</Url>
                      </DocLink>
                      <InputFiles>
                        <DataFile>
                          <Path>..\Data\simplePasswordProtected.ppt</Path>
                        </DataFile>
                      </InputFiles>
                      <Type>Console</Type>
                    </Example>
                  </Examples>
                </Folder>
                <Folder>
                  <Title>Saving a Presentation</Title>
                  <Description>Whether you are creating a presentation from scratch or want to modify an existing one, you would like to save your presentation after your work is finished. Using Aspose.Slides developers can either save their presentation as a file or stream. This example implements both of these approaches in detail.</Description>
                  <FolderName>SavePresentation</FolderName>
                  <Order>2</Order>
                  <Examples>
                    <Example>
                      <Title>Save Presentation to File</Title>
                      <Description>Developers can save presentations to files by calling the Write method of the Presentation class. For this, developers can simply pass the file name to the Write method exposed by Presentation class as a string as explained in the example.</Description>
                      <FolderName>SavePresentationToFile</FolderName>
                      <Order>1</Order>
                      <DocLink>
                        <DisplayName>Saving a Presentation</DisplayName>
                        <Url>Saving+a+Presentation</Url>
                      </DocLink>
                      <OutputFiles>
                        <DataFile>
                          <Path>..\Data\demo.ppt</Path>
                        </DataFile>
                      </OutputFiles>
                      <Type>Console</Type>
                    </Example>
                    <Example>
                      <Title>Save Presentation to Stream</Title>
                      <Description>It is possible to save a presentation to a stream by passing an output stream to the Write* method of the Presentation class. There are many types of streams to which a presentation can be saved but in this example the output stream of Http Response is used for the demonstration purpose. You can simply follow the steps below to do so:

- Set the Content Type of Http Response
- Append the Header to contain the file name
- Write the presentation to the Stream
- Close the Http Response</Description>
                      <FolderName>SavePresentationToStream</FolderName>
                      <Order>2</Order>
                      <DocLink>
                        <DisplayName>Saving a Presentation</DisplayName>
                        <Url>Saving+a+Presentation</Url>
                      </DocLink>
                      <OutputFiles>
                        <DataFile>
                          <Path>..\Data\output.ppt</Path>
                        </DataFile>
                      </OutputFiles>
                      <Type>Console</Type>
                    </Example>
                  </Examples>
                </Folder>
              </Folders>
            </Folder>
            <Folder>
              <Title>Working with Slides</Title>
              <Description>This sectiion contains examples related to addition, removal, cloning, managing transitions and accessing attributes etc. of the slides in a presentation using Aspose.Slides.</Description>
              <FolderName>WorkingWithSlides</FolderName>
              <Order>3</Order>
              <Examples>
                <Example>
                  <Title>Creating Slide Thumbnail Image</Title>
                  <Description>Spose.Slides for .NET is used to create presentation files containing slides. These slides can be viewed by opening presentation files using MS PowerPoint . But sometimes, developers may also need to view these slides as images using their favorite image viewers. In such cases, Aspose.Slides for .NET provides the feature to generate thumbnail images of the slides. The usage of this feature is described in this example in detail.</Description>
                  <FolderName>CreateSlideThumbnail</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Creating Slide Thumbnail Image</DisplayName>
                    <Url>Creating+Slide+Thumbnail+Image</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\thumbnail.jpg</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Adding Slides to Presentation</Title>
                  <Description>Each PowerPoint presentation file contains one Main Master slide and other Normal slides. It means that a presentation file contains at least one or more slides. It is important to know that presentation files without slides are not supported by Aspose.Slides for .NET. Each slide has specific position and a unique Id. The slide Id can range from 0 to 255 for master slides and from 256 to 65535 for normal slides. Aspose.Slides for .NET provides many ways to add and manage slides. In this topic, we will discuss all possible ways to add slides to a presentation.

1: Add Empty Slide to Presentation
2: Add Body Slide to Presentation
3: Add Double Body Slide to Presentation
4: Add Header Slide to Presentation
5: Add Title Slide to Presentation</Description>
                  <FolderName>AddingSlidesToPresentation</FolderName>
                  <Order>2</Order>
                  <DocLink>
                    <DisplayName>Adding Slides to Presentation</DisplayName>
                    <Url>Adding+Slides+to+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Changing the Position of a Slide</Title>
                  <Description>If you create a presentation using MS PowerPoint , you would have experienced , when ever you add a new slide to your presentation, it is appended at the end of the presentation by default. Using MS PowerPoint , you can drag a selected slide to any other position of the presentation. Aspose.Slides for .NET also allow developers to change the position of a slide within the presentation.</Description>
                  <FolderName>ChangingPositionOfSlide</FolderName>
                  <Order>3</Order>
                  <DocLink>
                    <DisplayName>Changing the Position of a Slide</DisplayName>
                    <Url>Changing+the+Position+of+a+Slide</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Removing Slides from a Presentation</Title>
                  <Description>Sometimes, developers may need to remove a slide from the presentation due to any reason. Aspose.Slides for .NET offers few methods to do so. In this topic, we will explore these methods to accomplish this task. Presentation class encapsulates the SlideCollection class that acts as a repository of all slides that are the part of the presentation. Developers can remove a slide from this SlideCollection in two ways:

1: Using Slide Reference
2: Using Slide Index</Description>
                  <FolderName>RemovingSlidesFromPresentation</FolderName>
                  <Order>4</Order>
                  <DocLink>
                    <DisplayName>Removing Slides from a Presentation</DisplayName>
                    <Url>Removing+Slides+from+a+Presentation</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
                <Example>
                  <Title>Cloning a Slide</Title>
                  <Description>Cloning is the process of making an exact copy or replica of something. Aspose.Slides for .NET also makes it possible to make a copy or clone any slide and then insert s that cloned slide to the current or any other opened presentation. The process of slide cloning creates a new slide that can be modified by developers without changing the original slide. In this topic, we will learn how to perform slide cloning. 
This article explains how to clone presentation slides in different ways:

1: Cloning in same Presentation
2: Cloning in another Presentation</Description>
                  <FolderName>CloningASlide</FolderName>
                  <Order>5</Order>
                  <DocLink>
                    <DisplayName>Cloning a Slide</DisplayName>
                    <Url>Cloning+a+Slide</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo2.ppt</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                  </InputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
            <Folder>
              <Title>Working with Shapes</Title>
              <Description>This section contains examples related to addition, formatting, rotating and accessing attributes of shapes in a presentation using Aspose.Slides.</Description>
              <FolderName>WorkingWithShapes</FolderName>
              <Order>4</Order>
              <Examples>
                <Example>
                  <Title>Filling Shapes with Picture</Title>
                  <Description>If a developer needs to fill a shape with an image of his own choice, Aspose.Slides gives full freedom to its users to fill a shape with any desired image. In this topic, we will discuss how to achieve this.</Description>
                  <FolderName>FillShapeWithPicture</FolderName>
                  <Order>1</Order>
                  <DocLink>
                    <DisplayName>Filling Shapes with Picture</DisplayName>
                    <Url>Filling+Shapes+with+Picture</Url>
                  </DocLink>
                  <InputFiles>
                    <DataFile>
                      <Path>..\Data\demo.ppt</Path>
                    </DataFile>
                    <DataFile>
                      <Path>..\Data\demo.jpg</Path>
                    </DataFile>
                  </InputFiles>
                  <OutputFiles>
                    <DataFile>
                      <Path>..\Data\modified.ppt</Path>
                    </DataFile>
                  </OutputFiles>
                  <Type>Console</Type>
                </Example>
              </Examples>
            </Folder>
          </Folders>
        </Folder>
      </Folders>
    </Folder>
  </Folders>
</Data>